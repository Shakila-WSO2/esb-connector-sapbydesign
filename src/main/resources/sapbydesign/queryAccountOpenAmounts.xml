<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<template name="queryAccountOpenAmounts" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="queryObject"
               description="The object which is used to query current spending limit amount per company."/>
    <parameter name="processingConditionsObject" description="The conditions, which helps to manage the query result"/>
    <parameter name="includeOpenOrders"
               description="The indicator which defines if service and sales orders in status open are returned"/>
    <parameter name="includeOpenAndInPreparationOrders"
               description="The indicator which defines if service and sales orders in status open and in status In Preparation are returned"/>
    <sequence>
        <property name="queryObject" expression="$func:queryObject"/>
        <property name="processingConditionsObject" expression="$func:processingConditionsObject"/>
        <property name="includeOpenOrders" expression="$func:includeOpenOrders"/>
        <property name="includeOpenAndInPreparationOrders" expression="$func:includeOpenAndInPreparationOrders"/>
        <payloadFactory media-type="xml">
            <format>
                <soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope"
                               xmlns:glob="http://sap.com/xi/SAPGlobal20/Global">
                    <soap:Header/>
                    <soap:Body>
                        <glob:AccountsOpenAmountsQueryRequest_sync>
                            $1
                            $2
                            <IncludeOpenOrders xmlns="">$3</IncludeOpenOrders>
                            <IncludeOpenAndInPreparationOrders xmlns="">$4</IncludeOpenAndInPreparationOrders>
                        </glob:AccountsOpenAmountsQueryRequest_sync>
                    </soap:Body>
                </soap:Envelope>
            </format>
            <args>
                <arg expression="$ctx:queryObject"/>
                <arg expression="$ctx:processingConditionsObject"/>
                <arg expression="$ctx:includeOpenOrders"/>
                <arg expression="$ctx:includeOpenAndInPreparationOrders"/>
            </args>
        </payloadFactory>
        <filter
                xpath="$ctx:processingConditionsObject = '' or (not(string($ctx:processingConditionsObject)))">
            <then>
                <script language="js"><![CDATA[
				    var payload = mc.getPayloadXML();
                    delete payload.ProcessingConditions;
					mc.setPayloadXML(payload);
				]]>
                </script>
            </then>
            <else>
                <script language="js"><![CDATA[
                    var payload = mc.getPayloadXML();
                    var queryHitsUnlimitedIndicator = payload.ProcessingConditions.QueryHitsUnlimitedIndicator;
                    if(queryHitsUnlimitedIndicator == "" || queryHitsUnlimitedIndicator == null) {
                        delete payload.ProcessingConditions;
                        mc.setPayloadXML(payload);
                    }
                ]]>
                </script>
            </else>
        </filter>
        <filter
                xpath="$ctx:includeOpenOrders = '' or (not(string($ctx:includeOpenOrders)))">
            <then>
                <script language="js"><![CDATA[
                    var payload = mc.getPayloadXML();
                    delete payload.IncludeOpenOrders;
                    mc.setPayloadXML(payload);
                ]]>
                </script>
            </then>
        </filter>
        <filter
                xpath="$ctx:includeOpenAndInPreparationOrders = '' or (not(string($ctx:includeOpenAndInPreparationOrders)))">
            <then>
                <script language="js"><![CDATA[
                    var payload = mc.getPayloadXML();
                    delete payload.IncludeOpenAndInPreparationOrders;
                    mc.setPayloadXML(payload);
                ]]>
                </script>
            </then>
        </filter>
        <script language="js"><![CDATA[
            var payload = mc.getPayloadXML();
            var objs = payload.child("AccountOpenAmountsSelection").children();
            for (var x=0; x < objs.length(); x++) {
                var localName = objs[x].localName();
                var indexOfIBTC = objs[x].toString().indexOf("<IntervalBoundaryTypeCode>");
                if ((localName == "SelectionByCompanyID" || localName == "SelectionByAccountID"
                || localName == "SelectionByCreditLimitMaintainedIndicator"|| localName == "SelectionByOrderBlockIndicator"
                || localName == "SelectionByInvoiceBlockIndicator"|| localName == "SelectionByDeliveryBlockIndicator"
                || localName == "SelectionByDoubtfulDebtorIndicator")
                && indexOfIBTC == -1) {
                    delete objs[x];
                    mc.setPayloadXML(payload);
                } else if (indexOfIBTC > -1 && (objs[x].child("IntervalBoundaryTypeCode") == ""
                || objs[x].child("IntervalBoundaryTypeCode") == null)) {
                    delete objs[x];
                    mc.setPayloadXML(payload);
                }
            }
        ]]>
        </script>
        <property name="Content-Type"
                  value="application/soap+xml;charset=UTF-8" scope="transport" type="STRING"/>
        <header name="Action"
                value="http://sap.com/xi/A1S/Global/QueryAccountOpenAmountsIn/FindAccountOpenAmountsRequest"/>
        <property value="true" name="FORCE_ERROR_ON_SOAP_FAULT"/>
        <property name="HTTP_METHOD" scope="axis2" value="POST"/>
        <header name="To"
                expression="fn:concat($ctx:uri.var.apiUrl, '/queryaccountopenamountsin?sap-vhost=', $ctx:sapHost)"/>
        <filter source="$ctx:SAP_BLOCKING" regex="true">
            <then>
                <call blocking="true">
                    <endpoint>
                        <default format="soap12">
                            <timeout>
                                <duration>60000</duration>
                                <responseAction>fault</responseAction>
                            </timeout>
                            <suspendOnFailure>
                                <initialDuration>2000</initialDuration>
                                <progressionFactor>1.0</progressionFactor>
                                <maximumDuration>3000</maximumDuration>
                            </suspendOnFailure>
                        </default>
                    </endpoint>
                </call>
            </then>
            <else>
                <call>
                    <endpoint>
                        <default format="soap12">
                            <timeout>
                                <duration>60000</duration>
                                <responseAction>fault</responseAction>
                            </timeout>
                            <suspendOnFailure>
                                <initialDuration>2000</initialDuration>
                                <progressionFactor>1.0</progressionFactor>
                                <maximumDuration>3000</maximumDuration>
                            </suspendOnFailure>
                        </default>
                    </endpoint>
                </call>
            </else>
        </filter>
        <!--Removing the Content-Encoding Header -->
        <header name="Content-Encoding" action="remove" scope="transport"/>
        <header name="sap-srt_server_info" action="remove" scope="transport"/>
        <header name="sap-srt_id" action="remove" scope="transport"/>
        <header name="sap-srt_server_info_ext" action="remove" scope="transport"/>
    </sequence>
</template>